@* Client/Shared/AccessControl.razor *@

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <NavLink class="logout">
            <button type="button" class="btn btn-outline-primary">
                <a href="#" @onclick="BeginSignOut">
                    <i class="fa-solid fa-right-from-bracket"></i>
                    Sign out
                </a>
            </button>
        </NavLink>
    </Authorized>
    <NotAuthorized>
        <NavLink class="login">
            <button type="button" class="btn btn-outline-success">
                <a href="authentication/login">
                    <i class="fa-solid fa-right-to-bracket"></i>
                    Sign in</a>
            </button>
        </NavLink>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}