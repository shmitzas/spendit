@page "/transactions"
@using WebApp.Services;
@using WebApp.Models;
@using WebApp.Auth;
@inject TransactionsService _transactions;
@attribute [Authorize]
<PageTitle>Spendit - Transactions</PageTitle>
<AuthorizeView>
    <Authorized>
        <div class="container-sm">
            <div class="row">
                <div class="col-12 ms-5 me-5 mt-5 mb-5">
                    <h2 class="text-center">Transaction manager</h2>
                    @if (transaction != null)
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">ID</th>
                                    <th scope="col">Description</th>
                                    <th scope="col">Ammount</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th scope="row">@transaction.Id</th>
                                    <td>@transaction.Description</td>
                                    <td>@transaction.Amount @transaction.Currency</td>
                                </tr>

                            </tbody>
                        </table>
                    }
                    @if (transactions != null)
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">ID</th>
                                    <th scope="col">Description</th>
                                    <th scope="col">Ammount</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var tr in transactions)
                                {
                                    <tr>
                                        <th scope="row">@tr.Id</th>
                                        <td>@tr.Description</td>
                                        <td>@tr.Amount @tr.Currency</td>
                                    </tr>
                                }


                            </tbody>
                        </table>
                    }
                    else
                    {
                        <ErrorBoundary>
                            <div class="alert alert-danger d-flex align-items-center" role="alert">
                                <svg class="bi flex-shrink-0 me-2" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                                <div>
                                    Something went wrong! Try refreshing the page or come back later!
                                </div>
                            </div>
                        </ErrorBoundary>
                    }
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <h2>Nieko nera, prisijunk :)</h2>
    </NotAuthorized>
</AuthorizeView>



@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private IEnumerable<Transaction>? transactions;
    private Transaction? transaction;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;
        var username = authState.User.Identity.Name;
        transactions = await _transactions.GetTransactions(username);
    }
}
